#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <stdbool.h>
#define MAX 40

typedef struct {
    char tipov;
    int nveiculo;
    int origem;
    int instante;
    int dfinal;
    char estacionamento;
    int testacionamento;
}Carro;

typedef struct{
	char tipo;
	int instante;
	int duracao;
	int via;
	int faixa;
	int posicao;
}Evento;

typedef struct{
	Carro Faixa1[MAX]; //Leste - Oeste
	Carro Faixa2[MAX]; //Oeste - Leste
	int inicio;
	int fim;
}Via_1;

Evento defeito_v1;

void inicializarVia_1(Via_1* x){
	x->inicio = 0;
	x->fim = 0;
	int i;
	for(i=0; i<=MAX; i++){
		x->Faixa1[i].tipov = ' ';
		x->Faixa1[i].nveiculo = 0;
		x->Faixa1[i].origem = 0;
		x->Faixa1[i].instante = 0;
		x->Faixa1[i].dfinal = 0;
		x->Faixa1[i].estacionamento = ' ';
		x->Faixa1[i].testacionamento = 0;
		
		x->Faixa2[i].tipov = ' ';
		x->Faixa2[i].nveiculo = 0;
		x->Faixa2[i].origem = 0;
		x->Faixa2[i].instante = 0;
		x->Faixa2[i].dfinal = 0;
		x->Faixa2[i].estacionamento = ' ';
		x->Faixa2[i].testacionamento = 0;
	}
}

bool isFull(Via_1* x, Carro faixa){
	int i;
	if(faixa.origem == 1){
		for (i = 0; i < MAX; i++){
			if (x->Faixa1[i].tipov == ' '){
		  	return false;
  	   		}
		}
		return true;
	}else if(faixa.origem == 2){
		for (i = 0; i < MAX; i++){
			if (x->Faixa2[i].tipov == ' '){
		  	return false;
  	   		}
		}
		return true;
	}
	return true;
	}

void inserirVia_1(Via_1* x, Carro veiculo){
	switch(veiculo.origem)
	{
		case 1: //sentido Leste - Oeste (FAIXA 1)
			if(veiculo.tipov == 'A' && x->Faixa1[20].tipov == ' '){ //Ambulancia no Hospital
				x->Faixa1[20] = veiculo;
			}else{
				if(isFull(x, veiculo)){
					printf("\n Pista cheia!\n");
				}else{
					if(veiculo.tipov == 'C' && (defeito_v1.faixa != veiculo.origem || defeito_v1.posicao != MAX-1)){
						x->Faixa1[MAX-1] = veiculo;
					}else if(defeito_v1.posicao == MAX-1){
							x->Faixa1[MAX-2] = veiculo;
					}
		   	   	   	x->fim = MAX-1; //obs
				}
			}
			break;
		case 2: //Sentido Oeste - Leste (FAIXA 2)
			if(veiculo.tipov == 'A' && x->Faixa2[0].tipov == ' '){
				x->Faixa1[0] = veiculo;
			}else{
				if(isFull(x, veiculo)){
					printf("\n Pista cheia!\n");
				}else{
					if(veiculo.tipov == 'C' && (defeito_v1.faixa != veiculo.origem || defeito_v1.posicao != 0)){
						x->Faixa2[0] = veiculo;
					}else if(defeito_v1.posicao == 0){
							x->Faixa2[1] = veiculo;
					}
		   	   	   	x->fim = MAX-1; //obs
				}
			}
			break;
	}
}

int verificarAmbulanciaFaixa1(Via_1* v){
	int i;
	for(i=0; i <= 20; i++){
		if(v->Faixa1[i].tipov == 'A'){
			return i;
		}
	}
	return 0;
}

int verificarAmbulanciaFaixa2(Via_1* v){
	int i;
	for(i=0; i <= 20; i++){
		if(v->Faixa2[i].tipov== 'A'){
			return i;
		}
	}
	return -1;
}

void CicloVia_1(Via_1* x){
	int j;
	int amb1 = verificarAmbulanciaFaixa1(x);
	int amb2 = verificarAmbulanciaFaixa2(x);
		if(defeito_v1.faixa != 1){
			if(amb1 >= 0){
				for(j = 0; j <= amb1-3; j++){
					x->Faixa1[j] = x->Faixa1[j+1];
				}
				if(amb1-3 >= 0){
					x->Faixa1[amb1-3] = x->Faixa1[amb1];
				}else{
					x->Faixa1[amb1].tipov = ' ';
					x->Faixa1[amb1].nveiculo = 0;
					x->Faixa1[amb1].origem = 0;
					x->Faixa1[amb1].instante = 0;
					x->Faixa1[amb1].dfinal = 0;
					x->Faixa1[amb1].estacionamento = ' ';
					x->Faixa1[amb1].testacionamento = 0;
				}
				for(j = amb1; j >= MAX-1; j++){
					x->Faixa1[j] = x->Faixa1[j+1];
				}
			}else{
				for(j = 0; j < MAX-1; j++){
					x->Faixa1[j] = x->Faixa1[j+1];
				}
			}
		}else{
			if(amb1 >= 0){
				for(j = 0; j <= amb1-3; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa1[j-1] = x->Faixa1[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa1[j+1].tipov = ' ';
							x->Faixa1[j+1].nveiculo = 0;
					   	   	x->Faixa1[j+1].origem = 0;
					   	   	x->Faixa1[j+1].instante = 0;
							x->Faixa1[j+1].dfinal = 0;
							x->Faixa1[j+1].estacionamento = ' ';
							x->Faixa1[j+1].testacionamento = 0;
						}
						x->Faixa1[j] = x->Faixa1[j+1];
					}
				}
				if(amb1-3 >= 0){
					x->Faixa1[amb1-3] = x->Faixa1[amb1];
				}else{
					x->Faixa1[amb1].tipov = ' ';
					x->Faixa1[amb1].nveiculo = 0;
					x->Faixa1[amb1].origem = 0;
					x->Faixa1[amb1].instante = 0;
					x->Faixa1[amb1].dfinal = 0;
					x->Faixa1[amb1].estacionamento = ' ';
					x->Faixa1[amb1].testacionamento = 0;
				}
				for(j = amb1; j >= MAX-1; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa1[j-1] = x->Faixa1[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa1[j+1].tipov = ' ';
							x->Faixa1[j+1].nveiculo = 0;
					   	   	x->Faixa1[j+1].origem = 0;
					   	   	x->Faixa1[j+1].instante = 0;
							x->Faixa1[j+1].dfinal = 0;
							x->Faixa1[j+1].estacionamento = ' ';
							x->Faixa1[j+1].testacionamento = 0;
						}
						x->Faixa1[j] = x->Faixa1[j+1];
					}
				}
			}else{
				for(j = 0; j < MAX-1; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa1[j-1] = x->Faixa1[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa1[j+1].tipov = ' ';
							x->Faixa1[j+1].nveiculo = 0;
					   	   	x->Faixa1[j+1].origem = 0;
					   	   	x->Faixa1[j+1].instante = 0;
							x->Faixa1[j+1].dfinal = 0;
							x->Faixa1[j+1].estacionamento = ' ';
							x->Faixa1[j+1].testacionamento = 0;
						}
						x->Faixa1[j] = x->Faixa1[j+1];
					}
				}
			}
			
		}
		
		//Via 1 Oeste - Leste
		if(defeito_v1.faixa != 2){
			if(amb2 >= 0){
				for(j = 0; j <= amb2-3; j++){
					x->Faixa2[j] = x->Faixa2[j+1];
				}
				if(amb2-3 >= 0){
					x->Faixa2[amb2-3] = x->Faixa2[amb2];
				}else{
					x->Faixa2[amb2].tipov = ' ';
					x->Faixa2[amb2].nveiculo = 0;
					x->Faixa2[amb2].origem = 0;
					x->Faixa2[amb2].instante = 0;
					x->Faixa2[amb2].dfinal = 0;
					x->Faixa2[amb2].estacionamento = ' ';
					x->Faixa2[amb2].testacionamento = 0;
				}
				for(j = amb2; j >= MAX-1; j++){
					x->Faixa2[j] = x->Faixa2[j+1];
				}
			}else{
				for(j = 0; j < MAX-1; j++){
					x->Faixa2[j] = x->Faixa2[j+1];
				}
			}
		}else{
			if(amb2 >= 0){
				for(j = 0; j <= amb2-3; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa2[j-1] = x->Faixa2[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa2[j+1].tipov = ' ';
							x->Faixa2[j+1].nveiculo = 0;
					   	   	x->Faixa2[j+1].origem = 0;
					   	   	x->Faixa2[j+1].instante = 0;
							x->Faixa2[j+1].dfinal = 0;
							x->Faixa2[j+1].estacionamento = ' ';
							x->Faixa2[j+1].testacionamento = 0;
						}
						x->Faixa2[j] = x->Faixa2[j+1];
					}
				}
				if(amb2-3 >= 0){
					x->Faixa2[amb2-3] = x->Faixa2[amb2];
				}else{
					x->Faixa2[amb2].tipov = ' ';
					x->Faixa2[amb2].nveiculo = 0;
					x->Faixa2[amb2].origem = 0;
					x->Faixa2[amb2].instante = 0;
					x->Faixa2[amb2].dfinal = 0;
					x->Faixa2[amb2].estacionamento = ' ';
					x->Faixa2[amb2].testacionamento = 0;
				}
				for(j = amb2; j >= MAX-1; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa2[j-1] = x->Faixa2[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa2[j+1].tipov = ' ';
							x->Faixa2[j+1].nveiculo = 0;
					   	   	x->Faixa2[j+1].origem = 0;
					   	   	x->Faixa2[j+1].instante = 0;
							x->Faixa2[j+1].dfinal = 0;
							x->Faixa2[j+1].estacionamento = ' ';
							x->Faixa2[j+1].testacionamento = 0;
						}
						x->Faixa2[j] = x->Faixa2[j+1];
					}
				}
			}else{
				for(j = 0; j < MAX-1; j++){
					if(defeito_v1.posicao == j && j-1 >= 0){
						x->Faixa2[j-1] = x->Faixa2[j+1];
					}else{
						if(defeito_v1.posicao == j && j-1 < 0){
							x->Faixa2[j+1].tipov = ' ';
							x->Faixa2[j+1].nveiculo = 0;
					   	   	x->Faixa2[j+1].origem = 0;
					   	   	x->Faixa2[j+1].instante = 0;
							x->Faixa2[j+1].dfinal = 0;
							x->Faixa2[j+1].estacionamento = ' ';
							x->Faixa2[j+1].testacionamento = 0;
						}
						x->Faixa2[j] = x->Faixa2[j+1];
					}
				}
			}
			
		}
		
		
		
}

int main(){
	
	return 0;
}
